# -*- coding: utf-8 -*-
"""numpy simple example.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tDU4Yb_fDXnW4pyM1Fv_IQHb9hPlnHcE
"""

import numpy as np
a= np.array([1,2,3,4])
print(a)

"""How would I multiple two large arrays without vectorization?"""

import time
a = np.random.rand(1000000)
b = np.random.rand(1000000)
for i in range(1,10):
    print(a[i])
c = 0
tic = time.time()
for i in range(1000000):
    c+=a[i]*b[i]
toc = time.time()
time1= 1000*(toc-tic)
print(toc)
print(tic)
print("Regular version took:" + str(time1) + " miliseconds")
print(c)

"""This is the Vectorized version of this code. Uses something called, "SIMD: short for Single Instruction/Multiple Data"""

tic = time.time()
c = np.dot(a,b)
toc = time.time()
time2= 1000*(toc-tic)
print("Vectorized version took:" + str(time2) + " miliseconds")
print(c)

"""Another example with multiplying e^i """

a = np.random.rand(1000000)
tic = time.time()
u = np.exp(a)
#np.log exist, np.abs, np.maximum, np.minimum
toc = time.time()
time1= 1000*(toc-tic)
print("Vectorized version took: " + str(time1) + " miliseconds")
print(u)

import math
tic = time.time()
u = np.zeros(1000000)
for i in range(1000000):
    u[i]=math.exp(a[i])
toc = time.time()
time2= 1000*(toc-tic)
print("Non-vectorized version took: " + str(time2) + " miliseconds")
print(u)

"""Now try something on your computer!  Save this notebook to your own drive computer!  Let's start small.  Assume you have a function: 

y = -0.4152 * CRIM + 24.0331

Create 1000 random values for CRIM and find y with and without vectorization

Now something a little harder. You have the function:

y =  -0.1078* CRIM + 0.0523* ZN + 2.6214* CHAS -16.4618* NOX + 3.6229* RM -1.5394* DIS   

Create 1000 random variable for all variables (CRIM, ZN, CHAS, NOX, RM, and DIS) and solve for y without vectorization (pretty ok) and with vectorization (not so easy).  If you can't do the last assignment with vectorization, don't worry :)
"""

def dot():
    CRIM = np.random.rand(1000)
    y=0
    tic = time.time()
    print(tic)
    for i in range(1000):
        y += -0.4152 * CRIM[i] + 24.0331
    toc = time.time()
    time2= 1000*(toc-tic)
    print("Non-vectorized version took: " + str(time2) + " miliseconds")


    tic = time.time()
    y=np.dot(-0.4152,CRIM)
    toc = time.time()
    time2= 1000*(toc-tic)
    print("vectorized version took: " + str(time2) + " miliseconds")
    #print(y)

dot()